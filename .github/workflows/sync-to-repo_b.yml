name: Sync to Remote Repository repo_b

on:
  push:
    branches: [ main ]  # Change if your default branch is different
  workflow_dispatch:    # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed to get all history for mirroring

    - name: Setup Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Prevent sync loop
      id: check_commit
      run: |
        LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
        if [ "$LAST_COMMIT_MSG" = "[Sync from Repo repo_b]" ]; then
          echo "Sync commit from Repo repo_b detected. Skipping."
          echo "skip=true" >> $GITHUB_OUTPUT
        else
          echo "skip=false" >> $GITHUB_OUTPUT
        fi

    - name: Setup SSH Key and Known Hosts
      if: steps.check_commit.outputs.skip == 'false'
      run: |
        # Install the private key
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        # Add destination server to known_hosts
        ssh-keyscan github.com >> ~/.ssh/known_hosts  # Change if not GitHub
        # For GitLab: ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
        # For Bitbucket: ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
        
    - name: Create sync commit (from Repo repo_a)
      if: steps.check_commit.outputs.skip == 'false'
      run: |
        git commit --allow-empty -m "[Sync from Repo repo_a]"

    - name: Mirror to Destination repo_b
      if: steps.check_commit.outputs.skip == 'false'
      run: |
        git remote add destination git@github.com:HuzaifaIrfan-DevOps/duo-repo-sync-b.git
        # Or for GitLab: git@gitlab.com:owner/destination-repo.git
        # Or for Bitbucket: git@bitbucket.org:owner/destination-repo.git
        git push --mirror destination